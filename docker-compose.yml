version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: flashcards-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT_PUBLISH:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT:-5432}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: flashcards-backend
    env_file:
      - .env
    environment:
      # Inside the container we bind to 8000; host maps via ports below
      APP_PORT: "8000"
      # Use your .env values but override host to the service DNS 'db'
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${APP_PORT:-8000}:8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: flashcards-frontend
    environment:
      # Browser will call backend via localhost:${APP_PORT}
      VITE_API_BASE_URL: http://localhost:${APP_PORT:-8000}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: ["yarn", "dev", "--host", "0.0.0.0"]
    restart: unless-stopped

volumes:
  pgdata:
    driver: local


